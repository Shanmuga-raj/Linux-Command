								  
								  
								  
								  LINUX COMMANDS
								  ``````````````
------------------------------------------------------------------------------------------------------------------------------------------------------------------

								CREATE-MODIFY-REMOVE:
								`````````````````````

DIRECTORY:
``````````
	|
	|--> Print Working Directory					-		pwd
	|--> Change Directory						-		cd
	|--> Go To Previous Directory					-		cd ..
	|--> Make Directory						-		mkdir xxx
	|--> Change Directory (Relative path)				-		cd ../xxx
	|--> Change Directory (Absolute path)				-		cd /xxx (or) cd ~/xxx
	|--> Directory Name With Space					-		mkdir x\ x\ x (or) mkdir 'x x x'
	|--> Copy (xxx File to Directory yyy)				-		cp xxx ~/yyy
	|--> Recursive Copy (Dir xxx to Dir yyy)			-		cp -r xxx ~/yyy
	|--> Copy Multiple file to Directory yyy			-		cp *.txt ~/yyy
	|--> Move (xxx File to Directory yyy)				-		mv xxx ~/yyy
	|--> Move Multiple file to Directory yyy			-		mv *.txt ~/yyy
	|--> Remove Directory						-		rm -r xxx (or) rmdir xxx
	|--> List File in Directory					-		ls (or) dir ( l - additional information, a- hidden files)



FILE:
`````
	|
	|--> Print The Type of File					-		file xxx
	|--> Create a File						-		touch xxx
	|--> Create Multiple File					-		touch A{a..z}.txt
	|--> Display Document						-		cat xxx.txt
	|--> Display The Content Of File				-		pr xxx.txt
	|--> Display Larger Document					-		less xxx.txt
	|--> Display One Page At A Time					-		more xxx.txt
	|--> Display First 10 Lines Of File				-		head xxx.txt
	|--> Display Last 10 Lines Of File				-		tail xxx.txt
	|--> Edit File							-		nano xxx.txt (or) gedit xxx.txt
	|--> See Repeated Lines in a File				-		cat file_name | uniq
	|--> Remove Repeated Lines in a File				-		uniq file_name new_file_name
	|--> Append Given Text To File					-		echo 'this is a new line' >> xxx.txt (In Single Quote's)
	|--> To Append New Line						-		echo >> xxx.txt (or) echo '\n' >> xxx.txt
	|--> To Append New Line with Some Texts				-		echo -en 'first line \nsecond line' >> xxx.txt
	|--> To Remove Certain Line From File				-		sed -i 'ld' xxx.txt (replace 'l' with line number, use $ for last line)
	|--> Overwrite The Files With Given				-		echo 'this one removes everything' > xxx.txt
	|--> Append Content To File					-		echo text >> xxx.txt
	|--> Overwrite Content In File					-		echo text > xxx.txt
	|--> Standard Input From File					-		cat < xxx.txt (same as cat command)
	|--> Search word in File (xxx.txt)				-		grep word xxx.txt
	|--> Remove File						-		rm xxx
	|--> Count Character in File					-		wc xxx.txt
	|--> Rename File						-		mv oldname newname
	|--> Create Softlink of File					-		ln -s originalfname newfname (copy files without additional disk usage. 
	|												Deleting file will delete every file)
	|--> Create Hardlink of File					-		ln originalfname newfname (copy files without additional disk usage. 
	|												Deleting copy wont affect other file)
	|
	|
	|--> PERMISSION:
	|    ```````````
	|	|
	|	|--> Change Mode					-		chmod
	|	|--> Change Owner					-		chown
	|	|--> Change Group					-		chgrp
	|	|--> Add Read Permission				-		chmod u+x filename
	|	|--> Remove Read Permission				-		chmod u-x filename
	|	|--> Change Owner Of The File				-		sudo chown usrname filename
	|	|--> Change Group Of The File				-		sudo chgrp groupname filename
	|				
	|			NOTE:
	|			`````
	|				(u - Owner,	g - Group,	o - Other)
	|				(1 - Execute,	2 - Write,	4 - Read)
	|
	|
	|--> ARCHIVE-UNPACK:
	|    ```````````````
	|	|
	|	|--> List Archive Files					-		tar -tf fname.tar (t - list content)
	|	|--> Create an Archive					-		tar -cvf fname.tar xxx yyy zzz (cf - create, v - verbose)
	|	|--> Create an Archive of All files			-		tar -cvf fname.tar *
	|	|--> Add Files to Existing archive			-		tar -rf fname.tar xxx
	|	|--> Overwrite the Archieve File			-		tar -cvf dir.tar dir1 dir2
	|	|--> Archive With Compression				-		tar -cvjf fname.tar.bz2 xxx yyy zzz (j - bzip2, z - gzip, Z - compress)
	|	|--> Unpack Archive File				-		tar -xvf fname.tar (xf - extract, v - verbose)
	|	|--> Unpack With Decompression				-		tar -xjvf fname.tar.bz2 (j - bzip2, z - gzip)
	|	|--> Delete Files From Archive				-		tar -f fname.tar --delete xxx yyy
	|
	|
	|--> Transfer Files Using SCP:
	|    `````````````````````````
	|	|
	|	|--> Transfer Securely to Another Machine		-		scp file.txt raj@server:$HOME
	|	|--> Transfer Multiple Files				-		scp /my_folder/*.txt raj@server:$HOME
	|	|--> Download Files From Remote Server			-		scp raj@server:$HOME/file.txt  /local/machine/path
	|
	|
	|--> CREATE-INSPECT-KEY-PAIR (ENCRYPT / DECRYPY USING OPENSSL):
	     ``````````````````````````````````````````````````````````
		|
		|--> Generate private key of 2048bits RSA		-		openssl genrsa -out private_key.pem 2048 (2048 refers to bits)
		|--> Generate Public Key Based on PrivateKey		-		openssl rsa -in private_key.pem -outform PEM -pubout -out public_key.pem
		|--> Encrypt the file using public key			-		openssl rsautl -encrypt -pubin -inkey public_key.pem -in fname.txt 
		|										-out n_fname.enc
		|--> Decrypt the file using Private Key			-		openssl rsautl -decrypt -inkey private_key.pem -in n_file.enc
		|--> Creata a Hash Digest 				-		openssl dgst -sha256 -sign private_key.pem -out fname.txt.sha256 fname.txt
		|--> Hash Digest Verification				-		openssl dgst -sha256 -verify public_key.pem -signature 
												fname.txt.sha256 fname.txt



******************************************************************************************************************************************************************

								INSTALLATION:
								`````````````

SYSTEM-UPDATE:
``````````````
	|
	|--> Update Kernel						-		sudo apt full-upgrade
	|--> Update Package Manager					-		sudo apt update && sudo apt upgrade -y



PACKAGES:
`````````
	|
	|--> List Debian Packages					-		dpkg -l
	|--> Search Repository Using Package Name			-		apt-cache search "firefox"
	|--> Verify Whether Package Installed Successfullt		-		dpkg -l | grep xxx
	|--> Install a Package Manager					-		sudo apt install pkgname
	|--> Remove a Package Except Configuration File			-		sudo apt remove pkgname
	|--> Remove a Package With Configuration File			-		sudo apt purge pkgname
	|--> Install a Debian Packages					-		sudo dpkg -i pkgname.deb (i - Install)
	|--> Remove a Debian Packages					-		sudo dpkg -r pkg (r - Remove)
	|--> List Manually Installed Packages				-		comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/
	|											initial-status.gz | sed -n 's/^Package: //p' | sort -u)
	|--> List Installed Packages					-		apt list --manual-installed
	|--> Reinstall Packages						-		sudo apt install --reinstall PACKAGE
	|--> Backup Apps and PPAs					-		sudo apt-add-repository â€“y ppa:teejee2008/ppa
	|											sudo apt-get install aptik
	|--> Create a Snapshot of current version			-		sudo apt-add-repository -y ppa:teejee2008/ppa
												sudo apt-get install timeshift



SYSTEM-VPN:
```````````
	|
	|--> ADD PROTON VPN REPOSITORY:
	|		|
	|		|--> sudo apt-get upgrade
	|		|--> wget -q -O - https://repo.protonvpn.com/debian/public_key.asc | sudo apt-key add - 
	|		|--> sudo add-apt-repository 'deb https://repo.protonvpn.com/debian unstable main'
	|
	|
	|--> INSTALL THE PROTON-VPN CLIENT:
	|		|
	|		|--> sudo apt-get update && sudo apt-get install protonvpn
	|
	|
	|--> HOW TO USE PROTONVPN CLIENT ON LINUX:
	|		|
	|		|--> protonvpn-cli login [username] (username-its.shanmugaraj)
	|		|--> protonvpn-cli connect
	|		|--> protonvpn-cli status
	|		|--> protonvpn-cli disconnect
	|		|--> For Fastest protonVPN			-		protonvpn-cli c -f
	|
	|
	|--> HOW TO USE KILL SWITCH:
	|		|
	|		|--> protonvpn-cli ks --on
	|		|--> protonvpn-cli ks --always-on
	|		|--> protonvpn-cli ks --off
	|
	|--> UNINSTALL:
			|
			|--> protonvpn-cli ks --off
			|--> sudo apt-get autoremove protonvpn
			|--> rm -rf ~/.cache/protonvpn
			|--> rm -rf ~/.config/protonvpn
			|--> protonvpn configure
					|
					|--> Purge Configuration



PYTHON:
```````
	|--> PYTHON-PIP:
	|    ```````````
	|	|
	|	|--> Install pip					-		sudo apt install python3-pip
	|	|--> Install pip Module					-		python3.8 -m pip install <module>
	|	|--> Uninstall pip Module				-		python3.8 -m pip uninstall <module>
	|	|--> List all Installed pip				-		pip freeze (or) pip freeze --local
	|	|--> Remove Carriage Return from Windows		-		tr -d '\r' < oldfile.py > newfile.py
	|	|--> Uninstalling every installed pip packages		-		pip uninstall -y -r <(pip freeze)
	|	|--> Create a Required pip module file			-		pip freeze > requirements.txt
	|
	|
	|--> Installing Kivy:
	|    ````````````````
	|	|
	|	|--> Add Repository					-		sudo add-apt-repository ppa:kivy-team/kivy
	|	|--> Install Kivy					-		sudo apt-get install python3-kivy
	|	|--> Install Kivy Examples				-		sudo apt-get install kivy-examples
	|	|--> Uninstall Kivy					-		sudo apt-get purge --auto-remove python3-kivy
	|
	|
	|--> CREATING-VIRTUAL-ENVIRONMENT:
	     `````````````````````````````
		|
		|--> Creating Virutal Environment by installing Django in Ubuntu:
		|    ````````````````````````````````````````````````````````````
		|		|
		|		|--> Install venv from ubuntu		-		sudo apt install python3-venv
		|		|--> Create a New Virtual Directory	-		mkdir django-project
		|		|--> Go to that new directory		-		cd django-project
		|		|--> Create a Virtual Environment	-		python3.8 -m venv djangoenv (djangoenv - any name as you want)
		|		|--> Activate Isolated Environment	-		source djangoenv/bin/activate
		|		|--> Install Django			-		pip install django
		|		|--> Verify Version			-		django-admin --version
		|		|--> Deactivate Environment		-		deactivate
		|		|--> Create a Django Project:
		|			|
		|			|--> Start Project		-		django-admin startproject web_project
		|			|--> Create Empty Dev database	-		python manage.py migrate
		|			|--> Start Server		-		python manage.py runserver
		|			|--> Go to http			-		Ctrl+Click > http://127.0.0.1:8000/
		|
		|
		|--> Creating Virtual Environment in VSCode and by installing Kivy:
		``````````````````````````````````````````````````````````````
				|
				|--> Create a New Directory		-		mkdir kivy-project
				|--> Move to that Directory		-		cd kivy-project
				|--> Create a new virtual Environment	-		python3.8 -m venv kivyenv (kivyenv - any name as you want)
				|--> Open VS Code			-		File > Open Folder > kivy-project
				|--> Select Interpreter			-		Ctrl+Shift+P > python: Select Interpreter > .\kivyenv\Scripts\python.exe
				|--> Upgrade pip			-		python -m pip install --upgrade pip
				|--> Install django			-		pip install kivy
				|--> Deactivate Environment		-		deactivate



WEB-DEVELOPMENT:
````````````````
	|
	|--> Node Js							-		sudo apt-get install -y nodejs
	|--> NPM							-		sudo apt install npm
	|--> Browser Sync						-		sudo npm install -g browser-sync
		|
		|--> Start Browser Sync					-		browser-sync start --server --directory --files "*"
		|--> Sync Including child folder			-		browser-sync start --server --files "**/*"



******************************************************************************************************************************************************************

							DISK-PARTITION-MANAGEMENT:
							``````````````````````````

Show Partition Informations                     			-		sudo fdisk -l
List Of Partitions in HardDisk                  			-		sudo parted -l
Copy XDisk Files to YDisk                       			-		sudo dd if=/dev/sdd of=~/Desktop/name.img bs=100M
Repair File System (Umount File System)					-		sudo fsck /dev/xxx (Make Sure to Umount of it may Cause Serious Error)



TO-CREATE-A-NEW-PARTITION:
``````````````````````````
	|
	|--> Go to Interactive Mode					-		sudo parted /dev/xxx
	|	|
	|	|--> Is Correct Disk Selected?				-		print
	|	|--> To Make a Lable					-		mklabel gpt (or) mbr 
	|	|--> Make A Primary Partition				-		mkpart primary ext4 1MiB 5GiB
	|	|--> Exit Interactive Mode				-		quit
	|
	|--> Format Partition						-		mkfs -t ext4 /dev/xxx
	|--> Mount Disk	(to mount disk we need a directory)
	|	|
	|	|--> Create a New Directory				-		mkdir /dirname
	|	|--> Mount it 						-		sudo mount /dev/xxx /dirname
	|
	|--> Unmount (Two ways)
		|
		|--> Unmount Disk					-		sudo umount /dev/xxx
		|--> Unmount Directory					-		sudo umount /dirname


	  NOTE:
		|
		|-->PARTITION-TABLE:
			|
			|--> MBR [Master Boot Record]			-	Only 4 Primary Partition [mostly used in windows]
			|--> GPT [GUID Partition Table]			-	Unlimited Partition 
			|--> UEFI					-	Used for Default BIOS system (But it is a GPT label)



TO-CREATE-A-SWAP-PARTITION:
```````````````````````````
	|
	|--> Go to Interactive Mode					-		sudo parted /dev/xxx
	|	|
	|	|--> Is Correct Disk Selected?				-		print
	|	|--> Make A Primary Partition				-		mkpart primary linux-swap 1MiB 5GiB	
	|	|--> Exit Interactive Mode				-		quit
	|
	|--> ON the Swap Partition					-		sudo mkswap /dev/xxx
	|--> Enable the Swap Partition					-		sudo swapon /dev/xxx



DELETE-EXISTENT-SWAP-AND-CREATE-A-NEW-SWAP:
```````````````````````````````````````````
	|
	|--> Check For The Presence Of Swap File			-		cat /proc/swaps (or) grep swap /etc/fstab
	|--> Disable Swap File						-		sudo swapoff /swapfile
	|--> Remove Swap File						-		sudo rm /swapfile
	|--> Allocate Space to Swap					-		sudo fallocate -l 32g /swapfile (32g - 32GB)
	|--> Allow permisson						-		sudo chmod 600 /swapfile
	|--> ON the Swap File						-		sudo mkswap /swapfile
	|--> Enable the Swap File					-		sudo swapon /swapfile



AUTOMATICALLY-MOUNT-DISK-ON-STARTUP:
````````````````````````````````````
	|
	|--> Go to Directory						-		cd /etc
	|--> View Fstab File						-		cat /etc/fstab
	|--> Add UUID To this File
		|
		|--> Show The UUID					-		sudo blkid



DISK-USAGE:
```````````
	|
	|--> Disk Utilization						-		du -h
	|--> Free Space Available					-		df -h



******************************************************************************************************************************************************************

							PROCESS-&-SERVICE-MAINTENANCE:
							``````````````````````````````

PROCESS:
````````
	|
	|--> RUNNING-PROCESS:
	|    ````````````````
	|	|
	|	|--> Running Process					-		ps
	|	|--> All Running Process				-		ps -f
	|	|--> All Running Process Except Kernel			-		ps -ef
	|	|--> Running Including Background			-		ps -x
	|	|--> Wide List Sorted by Percentage			-		ps auxw
	|	|--> Show Process Resource				-		top (q - exit)
	|	|--> Amount of Free Memory				-		free
	|	|--> Duration of uptime					-		uptime
	|	|--> Opened Files&Process Using it			-		lsof
	|	|--> Shows network status				-		netstat
	|	|--> Show Virtual Memory Status				-		vmstat
	|	|--> Show Input/Output Status				-		iostat
	|	|--> Report System Activity				-		sar
	|
	|
	|--> TERMINATION:
	     ````````````
			|
			|--> Terminate a Process Saftely		-		kill 'ProcessID
			|--> Terminate a Process Absolutely		-		kill -KILL 'ProcessID
			|--> Suspend a Process				-		kill -TSTP 'ProcessID
			|--> Continue a Process				-		kill -CONT 'ProcessID
			|--> Kill File Manager				-		killall nautilus
			|--> Kill Ubuntu Store				-		killall snap-store
			|--> Livepatch Refresh				-		canonical-livepatch refresh



CRON-TABLE:
```````````
	|
	|--> Cron Table Entry to Execute a Script			-		Minute Hour Day Month Week command-to-execute
			|
			|--> 59 11 2 5 * /usr/bin/banner "Happy Birthday" > /dev/console



REMOTE-CONNECTION:
``````````````````
	|
	|--> Install SSH Client						-		sudo apt-get install openssh-client
	|--> Install SSH Server						-		sudo apt-get install openssh-server
		|
		|--> See Local Host					-		sudo nano /etc/hosts (cd to Desktop)
		|--> Name of Host or Domain				-		nslookup
		|--> Connect To Remote Network				-		ssh -i ~/xxx/yyy/zzz.pem username@IPAddress
		|--> Send Files Through SSH				-		scp /xxx/yyy/zzz.txt username@IPAddress



SERVICES:
`````````
	|
	|--> Start The Service						-		sudo service 'servicename start
	|--> Check The Status Of Service				-		sudo service 'servicename status
	|--> Services that are Installed				-		sudo systemctl (q - quit)
	|--> Services that are Running					-		sudo systemctl --state=running (q - quit)
	|--> Services that are Failed					-		sudo systemctl --state=failes (q - quit)
	|--> Restart The Service					-		sudo service 'servicename restart
	|--> Stop The Service						-		sudo service 'servicename stop



LOG-FILES:
``````````
	|
	|--> Show Log Files						-		less /var/log/syslog
	|--> Show Errors in Log Files					-		less /var/log/syslog | grep error
	|--> Show Errors in Log Files on Real Time			-		tail -f /var/log/syslog



******************************************************************************************************************************************************************

								     SYSTEM:
								     ```````


System Kernel Version                           			-		uname -r
List Available Shell							-		cat /etc/shells
Set Local Time Date (DualBoot)                 				-		timedatectl set-local-rtc 1
Change Hostname								-		hostnamectl set-hostname newname
Change Date                                     			-		sudo date -s "1999-02-05 00:00:00"
OS Version								-		lsb_release -a (or) cat /etc/lsb-release
Reboot Without Restarting System
	|
	|--> gnome-shell --replace & disown
	|--> Press: Alt+Fn+F2 --> Type: r



ACCOUNT:
````````
	|
	|--> Login as Root User                              		-		sudo su - (or) sudo -i
	|--> Display $USER or $LOGIN					-		whoami
	|--> Display info about logged-in user				-		f, finger
	|--> split screen conversation for two users			-		talk
	|--> Display Message on user's screen				-		write
	|--> Displays a message on all logged-in usersâ€™ screens		-		wall
	|--> Displays a message to all users on a remote host		-		rwall
	|--> Executes a command, or login, on a remote host		-		rsh (or) remsh
	|--> Displays filesystem statistics				-		df
	|--> Set a New password						-		passwd usrname
	|--> Force Local User to Set New Password			-		sudo passwd -e usrname
	|--> Add new Local User						-		sudo useradd usrname
	|--> Remove Local User						-		sudo userdel usrname



RESETTING GNOME:
````````````````
	|
	|--> Reset Gnome Extension					-		rm -rf ~/.local/share/gnome-shell/extensions
	|--> Reset dconf (gsetting) to default				-		dconf reset -f /org/gnome/ 
	|										(or) mv .config/dconf/user .config/dconf/user.bak && sudo reboot
	|--> Remove all Gnome2 Config Settings				-		rm -rf .gnome .gnome2 .gconf .gconfd .metacity
	|--> Remove all Gnome3 Config Settings				-		rm -rf .gnome .gnome2 .gconf .gconfd .metacity .cache .dbus .dmrc 
												.mission-control .thumbnails ~/.config/dconf/user ~.compiz*



FACTORY-RESET-WITHOUT-REMOVING-DATA: (Follow Those Commands Step by Step)
````````````````````````````````````
	|
	|--> Configure Unconfigured Packages				-		sudo dpkg --configure -a
	|--> Update Content Of Repositories				-		sudo apt-get update
	|--> Fix Missing Dependencies					-		sudo apt-get -f install
	|--> Update All Package with Newer Version			-		sudo apt-get full-upgrade
	|--> Reinstall Ubuntu						-		sudo apt-get install --reinstall ubuntu-desktop
	|--> Remove Unnecessary Packages				-		sudo apt-get autoremove
	|--> Delete Packages thats Installed				-		sudo apt-get clean
	|--> Reboot System To Take Action				-		sudo reboot



REPAIRING-BOOT-AFTER-INSTALLING-LINUX-AND-WINDOWS (DUAL-BOOT):
``````````````````````````````````````````````````````````````
	|
	|--> Insert Ubuntu Bootable USB
	|--> Click on Try Ubuntu
	|--> Open Terminal (Check Connected to a Network)
		|
		|--> sudo add-apt-repository ppa:yannubuntu/boot-repair
		|--> sudo apt update
		|--> sudo apt install boot-repair
		|--> boot-repair
		|		|
		|		|--> REPAIR BOOT OF COMPUTER [Select - Recommended Repair]
		|		|--> BOOT INFO [Select - No]
		|
		|--> sudo reboot now



******************************************************************************************************************************************************************

								    TERMINAL:
								    `````````

BASIC-COMMANDS:
````````````````
	|
	|--> Displays Information about User				-		who
	|--> Extended who command					-		w
	|--> Clear Terminal						-		clear
	|--> Terminal History						-		history
	|--> Restart Execution that's been Stoped			-		fg
	|--> Locates Files and Directories				-		find
	|--> Display the System Date and Time				-		date
	|--> Display the Calendar					-		cal
	|--> Status of System Print Queues				-		lpstat
	|--> Enable or Start print Queue				-		enable
	|--> Disable or Stop Print Queue				-		disable
	|--> Displays base filename of a string parameter		-		basename
	|--> Writes out selected characters				-		cut
	|--> Programming language to parse characters			-		awk
	|--> Programming language for character substitution		-		sed



SYMBOL-COMMANDS:
````````````````
	|
	|--> String Commands Together (Pipe)				-		|
	|--> Execute in Background					-		&
	|--> Runs The Enclosed Command In A Sub-Shell			-		( )
	|--> Assigns value to a variable and does math in a shell	-		(( ))
	|--> Evaluates the enclosed Expression				-		$(( ))
	|--> String Comparison						-		< >
	|--> Command Substitution					-		$( ) (or) 'command'



OPERATOR:
`````````
	|
	|--> Bitwise OR							-		|
	|--> Logical OR							-		||
	|--> Bitwise Exclusive OR					-		^
	|--> Bitwise AND						-		&
	|--> Logical AND						-		&&
	|--> Unary Plus, Addition					-		+
	|--> Unary Minus, Subtraction					-		-
	|--> Multiplication						-		*
	|--> Division							-		/
	|--> Modulus (Remainder)					-		%
	|--> Auto Increment						-		++
	|--> Auto Decrement						-		--
	|--> Less Than							-		<
	|--> Greater Than						-		>
	|--> Less Than or Equal To					-		<=
	|--> Greater Than or Equal To					-		>=
	|--> Equality							-		==
	|--> Inequality							-		!=
	|--> Bitwise Left Shift						-		<<
	|--> Bitwise Right Shift					-		>>
	|--> Logical Negotiation					-		!
	|--> Binary Inversion						-		~



KEYBOARD-SHORTCUT:
``````````````````
	|
	|--> Move Cursor to the Beginning				-		Ctrl + A
	|--> Move Cursor to the End					-		Ctrl + E
	|--> Move Cursor Left (Move Back)				-		Ctrl + B
	|--> Move Cursor Right (Move Front)				-		Ctrl + F
	|--> Erase From Cursor to the Beginning				-		Ctrl + U
	|--> Erase From Cursor to the End				-		Ctrl + K
	|--> Previous Command						-		Ctrl + P
	|--> Next Command						-		Ctrl + N
	|--> Stop Execution						-		Ctrl + Z
	|--> Stop Execution Completely					-		Ctrl + C
	|--> Freeze Keyboard						-		Ctrl + S
	|--> Unfreeze Keyboard						-		Ctrl + Q
	|--> Erase a Word						-		Ctrl + W
	|--> Paste Erased Text						-		Ctrl + Y
	|--> Switch to Another Virtual Console				-		Alt + Ctrl + F1



******************************************************************************************************************************************************************


																by,
																	Shanmuga Raj R
